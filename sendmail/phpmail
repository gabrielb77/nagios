#!/usr/bin/php
<?php
// Import PHPMailer classes into the global namespace
// These must be at the top of your script, not inside a function
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

require '/sendmail/Exception.php';
require '/sendmail/PHPMailer.php';
require '/sendmail/SMTP.php';

$Subject = "$argv[2]";
$rcptto = "$argv[3]";
$body = stream_get_contents(STDIN);

// Instantiation and passing `true` enables exceptions
$mail = new PHPMailer(true);

try {
    //Server settings
#    $mail->SMTPDebug = SMTP::DEBUG_SERVER;                      // Enable verbose debug output
    $mail->isSMTP();                                            // Send using SMTP
    $mail->Host       = '10.92.32.13';                    // Set the SMTP server to send through
#    $mail->SMTPAuth   = false;                                   // Enable SMTP authentication
#    $mail->Username   = 'user@example.com';                     // SMTP username
#    $mail->Password   = 'secret';                               // SMTP password
#    $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;         // Enable TLS encryption; `PHPMailer::ENCRYPTION_SMTPS` encouraged
#    $mail->Port       = 587;                                    // TCP port to connect to, use 465 for `PHPMailer::ENCRYPTION_SMTPS` above
    $mail->SMTPSecure = false;
    $mail->SMTPAutoTLS = false;

    //Recipients
    $mail->setFrom('nagios@ar.atos.net', 'Nagios');
    $mail->addAddress($argv[3]);     // Add a recipient
    $mail->addReplyTo('no-reply@ar.myatos.net', 'no-reply');


    // Content
    $mail->isHTML(true);                                  // Set email format to HTML
    $mail->Subject = "$argv[2]";
    $mail->Body    = "$body";
    $mail->AltBody = "$body";

    $mail->send();
    echo "Message has been sent\r\n";
} catch (Exception $e) {
    echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}\r\n";
}
